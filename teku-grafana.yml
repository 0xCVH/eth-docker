version: "3.4"
services:
  beacon:
    expose:
      - 8008/tcp
    command:
      - --metrics-enabled=true
      - --metrics-port=8008
      - --metrics-interface=0.0.0.0
      - --metrics-host-allowlist=*
  prometheus:
    restart: "${RESTART}"
    build:
      context: ./prometheus
    image: prometheus
    volumes:
      - prom-data:/prometheus
      - ./prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
    environment:
      - CLIENT=${COMPOSE_FILE}
    expose:
      - 9090/tcp
    entrypoint: choose-config.sh
    command: ["/bin/prometheus", "--storage.tsdb.path=/prometheus", "--web.console.libraries=/usr/share/prometheus/console_libraries", "--web.console.templates=/usr/share/prometheus/consoles"]
    depends_on:
      - beacon
      - node-exporter
  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.textfile.directory=/etc/node-exporter/'
      - '--collector.filesystem.ignored-mount-points=${NODE_EXPORTER_IGNORE_MOUNT_REGEX}'
      - '--no-collector.ipvs'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
      - /etc/hostname:/etc/nodename:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/TZ:ro
    expose:
      - 9100/tcp
  grafana:
    restart: "${RESTART}"
    build:
      context: ./grafana
    image: grafana
    environment:
      - GF_SERVER_HTTP_PORT=${GRAFANA_PORT}
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    ports: 
      - ${GRAFANA_PORT}:${GRAFANA_PORT}/tcp
  eth2:
    depends_on:
      - grafana
volumes:
  grafana-data:
  prom-data:
