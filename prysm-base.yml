version: "3.4"
x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

x-build: &prysm-build
  context: ./prysm
  dockerfile: ${PRYSM_DOCKERFILE}
  args:
    - BUILD_TARGET=${PRYSM_SRC_BUILD_TARGET}
    - DOCKER_TAG=${PRYSM_DOCKER_TAG}

services:
  consensus:
    restart: "unless-stopped"
    build:
      target: consensus
      <<: *prysm-build
    image: prysm-consensus:merge
    user: prysmconsensus
    stop_grace_period: 1m
    volumes:
      - prysmbeacon-data:/var/lib/prysm
      - /etc/localtime:/etc/localtime:ro
      - jwtsecret:/var/lib/prysm/ee-secret
    environment:
      - RAPID_SYNC_URL=${RAPID_SYNC_URL}
      - JWT_SECRET=${JWT_SECRET}
      - OVERRIDE_TTD=${OVERRIDE_TTD}
      - MEV_BOOST=${MEV_BOOST}
    ports:
      - ${PRYSM_PORT}:${PRYSM_PORT}/tcp
      - ${PRYSM_UDP_PORT}:${PRYSM_UDP_PORT}/udp
    networks:
      default:
        aliases:
          - eth2
    <<: *logging
    entrypoint:
      - docker-entrypoint.sh
      - beacon-chain
      - --datadir
      - /var/lib/prysm/
      - --rpc-host
      - 0.0.0.0
      - --grpc-gateway-host
      - 0.0.0.0
      - --grpc-gateway-port
      - ${CL_REST_PORT:-5052}
      - --http-web3provider
      - ${EL_NODE}
      - --jwt-secret
      - /var/lib/prysm/ee-secret/jwtsecret
      - --p2p-tcp-port
      - ${PRYSM_PORT}
      - --p2p-udp-port
      - ${PRYSM_UDP_PORT}
      - --p2p-max-peers
      - ${CL_MAX_PEER_COUNT:-45}
      - --verbosity
      - ${LOG_LEVEL}
      - --chain-config-file=/usr/config.yaml
      - --genesis-state=/usr/genesis.ssz
      - --bootstrap-node=enr:-Ly4QBWdgA_Tt59pz3xeeMEIv9RXKjJn5pC4TiFxxmGcNrRAUTB5qVs6xTph7SLtLOPxlgn60mxaNyeAHc0inv1Zq40Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpD1_S08AQAAb1oAAAAAAAAAgmlkgnY0gmlwhJ_LJMCJc2VjcDI1NmsxoQJW6aQs89Fzox8_YwwO1C-ubid5awCWhd8oUPP8s2VepYhzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA
      - --bootstrap-node=enr:-Ly4QLtEwF2plyYK6wINg8p2cEvON5uxBRTGDjOVY-alCgBzfYoNqzAnYtMTRbH5iZgXAxAweh90i9FEtbN2OvhKZcMBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpD1_S08AQAAb1oAAAAAAAAAgmlkgnY0gmlwhJ_LJ0qJc2VjcDI1NmsxoQLYBUr39uZ3zPfC9XK0f-g22J2Z8DF1Ax3e444dwUmy0ohzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA
      - --bootstrap-node=enr:-Ly4QHyiqcUzJ4CtI6bhSTAZAD92UMEKwKCObZ-9hSZJAfgtXkj4JbAbhK33rXhqLFeO3isINvpPy_TUvoLB71__rOEBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpD1_S08AQAAb1oAAAAAAAAAgmlkgnY0gmlwhJ_fJsSJc2VjcDI1NmsxoQJjSw3xd3o7Rj1DzE7Wxlr6mEbt5s2re4ANlP_TMDLmUohzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA
      - --bootstrap-node=enr:-Ly4QN9Ro8-E9gyCCUuEYWlSwCbfzc2NkUGmN8YRDmg4K3rRP1FBiaDe9TWKVGaXhmb8F6qwYxW5h83hS6LjF8nJK34Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpD1_S08AQAAb1oAAAAAAAAAgmlkgnY0gmlwhJ_fM6-Jc2VjcDI1NmsxoQNEtFv9oWxfpqPxFgpngTaWPHuGC6XEwaLdANypSZ-S2YhzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA
      - --bootstrap-node=enr:-Ly4QMpHRs1843yWgB5yA2epcTBo4BrGrEB6b2fPAfxryjEEFzIUc_FOJ3b7r6h0bD_Gg-gCrX_mUgZZM8D7Xfot9J8Bh2F0dG5ldHOIAAAAAAAAAACEZXRoMpD1_S08AQAAb1oAAAAAAAAAgmlkgnY0gmlwhLymbsOJc2VjcDI1NmsxoQKhmKRn59_w2tt_KNQ2Jhj-F3b9hxRkFYdtW3IGgXm0oIhzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA
      - --bootstrap-node=enr:-Ly4QO80ytPwEEXF0B6Nsnk6N-89SI3Ja-wvhnMwTgvAiKCMNvOfHwf3FbJtLvZpP7O2v4ztnpqbdYEXngvLzgDsvSEBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpD1_S08AQAAb1oAAAAAAAAAgmlkgnY0gmlwhI5dgFeJc2VjcDI1NmsxoQMwMSfNp9AUZNAgWzYDo2nI1KNHej3aB2NWt8j9awAlO4hzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA
      - --bootstrap-node=enr:-Ly4QAnBhPYD4_Cc3CyJhVqkLquWeGIY5xlKLhy9j_Bx845iNwSORtcXdLReWlK33PfqHTbqpsI-rm--egamtkrB7ywBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpD1_S08AQAAb1oAAAAAAAAAgmlkgnY0gmlwhJO20mGJc2VjcDI1NmsxoQLhk56jmgLZTFopIhjoDlWpPiDjzLsrbnX7Z9iaOeg3PIhzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA
      - --bootstrap-node=enr:-Ly4QNrYdrX4KY4tPgQKG3KcGySPE7QtpfFCGSujQUpQkErELFeDjuVWRzMxyyEQJTyVlTSPXxy4t9T2yrl4lBf5x8ABh2F0dG5ldHOIAAAAAAAAAACEZXRoMpD1_S08AQAAb1oAAAAAAAAAgmlkgnY0gmlwhI5dxlqJc2VjcDI1NmsxoQIzft6l-G1eo45O7v1eg0AZx4G-uwi4oGARFYQk1_vy5ohzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA
      - --bootstrap-node=enr:-Ly4QEGDwovw841Etzs5wJquRZFMGPNNcKh6rqa5_BCI64NKYKOFjWTPh0nbwDBR7caIqEoDMKWBFzTTmqFKIQzjPpsBh2F0dG5ldHOIAAAAAAAAAACEZXRoMpD1_S08AQAAb1oAAAAAAAAAgmlkgnY0gmlwhI5dfvaJc2VjcDI1NmsxoQLTtR9MTMMQxDXWi7Gn3ABZD-NMyIaq1HxUtcDrjM7qz4hzeW5jbmV0cwCDdGNwgiMog3VkcIIjKA
      - --accept-terms-of-use
      - --monitoring-host
      - 0.0.0.0
      - --monitoring-port
      - "8008"
      - --suggested-fee-recipient
      - ${FEE_RECIPIENT}

  validator:
    restart: "unless-stopped"
    build:
      target: validator
      <<: *prysm-build
    image: prysm-validator:merge
    user: prysmvalidator
    volumes:
      - prysmvalidator-data:/var/lib/prysm
      - /etc/localtime:/etc/localtime:ro
    environment:
      - MEV_BOOST=${MEV_BOOST}
      - DOPPELGANGER=${DOPPELGANGER}
    <<: *logging
    entrypoint:
      - docker-entrypoint-vc.sh
      - validator
      - --datadir
      - /var/lib/prysm
      - --wallet-dir
      - /var/lib/prysm/
      - --beacon-rpc-provider
      - consensus:4000
      - --graffiti
      - ${GRAFFITI}
      - --verbosity
      - ${LOG_LEVEL}
      - --chain-config-file=/usr/config.yaml
      - --accept-terms-of-use
      - --monitoring-host
      - 0.0.0.0
      - --monitoring-port
      - "8009"
      - --web
      - --grpc-gateway-host
      - 0.0.0.0
      - --grpc-gateway-port
      - ${KEY_API_PORT:-7500}
      - --grpc-gateway-corsdomain=*
      - --beacon-rpc-gateway-provider
      - consensus:5052
      - --suggested-fee-recipient
      - ${FEE_RECIPIENT}
      # If you chose not to store the wallet password during import, comment out the two following lines
      - --wallet-password-file
      - /var/lib/prysm/password.txt
    depends_on:
      - consensus
    labels:
      - traefik.enable=true
      - traefik.http.routers.prysm.entrypoints=web,websecure
      - traefik.http.routers.prysm.rule=Host(`${PRYSM_HOST}.${DOMAIN}`)
      - traefik.http.routers.prysm.tls.certresolver=letsencrypt
      - traefik.http.services.prysm.loadbalancer.server.port=${KEY_API_PORT:-7500}

  create-wallet:
    profiles: ["tools"]
    restart: "no"
    image: prysm-validator:merge
    user: prysmvalidator
    environment:
      - NETWORK=${NETWORK}
    volumes:
      - prysmvalidator-data:/var/lib/prysm
      - /etc/localtime:/etc/localtime:ro
    entrypoint: create-wallet.sh

  validator-import:
    profiles: ["tools"]
    restart: "no"
    image: prysm-validator:merge
    user: root
    volumes:
      - prysmvalidator-data:/var/lib/prysm
      - jwtsecret:/var/lib/prysm/ee-secret
      - ./.eth/validator_keys:/validator_keys
      - /etc/localtime:/etc/localtime:ro
    environment:
      - KEYSTORE_PASSWORD=${KEYSTORE_PASSWORD:-}
      - WALLET_PASSWORD=${WALLET_PASSWORD:-}
      - NETWORK=${NETWORK}
    entrypoint:
      - validator-import.sh
      - validator
      - --verbosity
      - ${LOG_LEVEL}
      - --datadir
      - /var/lib/prysm
      - accounts
      - import
      - --wallet-dir=/var/lib/prysm/
      - --keys-dir=/val_keys
      - --chain-config-file=/usr/config.yaml

  validator-exit:
    profiles: ["tools"]
    restart: "no"
    user: prysmvalidator
    image: prysm-validator:merge
    volumes:
      - prysmvalidator-data:/var/lib/prysm
      - /etc/localtime:/etc/localtime:ro
    entrypoint:
      - validator
      - --verbosity
      - ${LOG_LEVEL}
      - --datadir
      - /var/lib/prysm
      - accounts
      - voluntary-exit
      - --wallet-dir=/var/lib/prysm/
      - --beacon-rpc-provider=consensus:4000
      - --wallet-password-file=/var/lib/prysm/password.txt
      - --chain-config-file=/usr/config.yaml
    depends_on:
      - consensus

  validator-keys:
    profiles: ["tools"]
    restart: "no"
    build:
      context: ./vc-utils
    image: vc-utils:local
    user: root
    volumes:
      - prysmvalidator-data:/var/lib/prysm
      - ./.eth/validator_keys:/validator_keys
      - /etc/localtime:/etc/localtime:ro
    environment:
      - KEYSTORE_PASSWORD=${KEYSTORE_PASSWORD:-}
      - KEY_API_PORT=${KEY_API_PORT:-7500}
      - PRYSM="true"
    depends_on:
      - validator
    entrypoint:
      - keymanager.sh
      - /var/lib/prysm/auth-token
      - validator

volumes:
  prysmbeacon-data:
  prysmvalidator-data:
  jwtsecret:
