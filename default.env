# Client choice: See https://eth-docker.net/docs/Usage/ClientSetup for available options
COMPOSE_FILE=teku-base.yml:besu.yml:deposit-cli.yml
# Set the ETH address that priority fees and MEV rewards should be sent to
FEE_RECIPIENT=
# Override TTD - may be required during testnet launch.
# If left empty, the client's built-in TTD is used
OVERRIDE_TTD=
# Decide whether to connect the CL to Flashbots MEV boost. Set MEV_BOOST to "true" for MEV
# boost, or any other value including empty for not using MEV boost.
# Note: Lighthouse as of July 2022 requires source build to support MEV boost. Switch the Dockerfile
# in the targets section to Dockerfile.source, and "./ethd update --keep-targets"
# Nimbus has an experimental pr-3883 that can be source-built for mev-boost
# If "true" it also requires :mev-boost.yml in COMPOSE_FILE
MEV_BOOST=false
MEV_RELAYS=https://0xb124d80a00b80815397b4e7f1f05377ccc83aeeceb6be87963ba3649f1e6efa32ca870a88845917ec3f26a8e2aa25c77@builder-relay-ropsten.flashbots.net
# Graffiti to use for validator
GRAFFITI=üêºeth-dockerüêº
# Merged network to use. If using main net, set to mainnet.
NETWORK=goerli
# CL rapid sync via initial state/checkpoint. Please create an Infura eth2/beacon project first, then replace the {projectid} and {secret} here
# Alternatively, use an already synced CL that you trust. No trailing / for Teku, please.
#RAPID_SYNC_URL=https://{projectid}:{secret}@eth2-beacon-${NETWORK}.infura.io
RAPID_SYNC_URL=
# Doppelganger protection - set to "true" to enable. This will intentionally skip two epochs on client start, and attempt to
# detect duplicates of the validator(s) already running. Note this is NOT foolproof, though it can be useful when moving a node
DOPPELGANGER=false

# Secure web proxy - advanced use, please see instructions
DOMAIN=example.com
ACME_EMAIL=user@example.com
CF_EMAIL=user@example.com
CF_API_TOKEN=SECRETTOKEN
AWS_PROFILE=myprofile
AWS_HOSTED_ZONE_ID=myzoneid
GRAFANA_HOST=grafana
PROM_HOST=prometheus
PRYSM_HOST=prysm
EL_HOST=el
EL_LB=el-lb
EL_WS_HOST=elws
EL_WS_LB=elws-lb
CL_HOST=cl
CL_LB=cl-lb
DDNS_SUBDOMAIN=
DDNS_PROXY=true

# Some clients suggest adjusting to higher (or lower) peer count. Adjust here, per client
# Nimbus peer count should not be set below 70. CL_MIN_PEER_COUNT is used for Teku,
# and in Lodestar it is, sneakily, the target count, not the minimum
CL_MAX_PEER_COUNT=
CL_MIN_PEER_COUNT=
# Ditto for EL, currently only in use for Besu. EL_MIN_PEER_COUNT for Besu is minimum
# peers before fast sync starts
EL_MAX_PEER_COUNT=
EL_MIN_PEER_COUNT=

# Beaconcha.in API key for sending client stats. Automatic for Lighthouse, or with prysm-stats.yml,
# source build only for Prysm as of Sept 2021.
# Specify as just the API key, and give the machine name separately
BEACON_STATS_API=
BEACON_STATS_MACHINE=

# P2P ports you will forward to your staking node. Adjust here if you are
# going to use something other than defaults.
EL_P2P_PORT=30303
CL_P2P_PORT=9000
PRYSM_PORT=9000
PRYSM_UDP_PORT=9000
# Local grafana dashboard port. Do not expose to Internet, it is insecure http
GRAFANA_PORT=3000
# Local key manager port. Reachable only via localhost. Also doubles as Prysm web port
KEY_API_PORT=7500
# Secure web proxy port, 443 and 80 are great defaults
TRAEFIK_WEB_PORT=443
TRAEFIK_WEB_HTTP_PORT=80
# Execution client RPC port, important when using ec-shared.yml. Insecure, do not expose to Internet.
EL_RPC_PORT=8545
# Execution client WS port. Insecure, do not expose to Internet.
# Note that for Erigon, this needs to match EL_RPC_PORT
EL_WS_PORT=8546
# Erigon's torrent port. Don't make this 42070, that'll fail
ERIGON_TORRENT_PORT=42069
# SSV Node ports
SSV_P2P_PORT=13001
SSV_P2P_PORT_UDP=12001

# Geth cache size. This matters for low-memory machines such as RasPi 4, where
# you may want to set it to 256. Geth will use the default if this is left blank.
#GETH_CACHE=--cache=256
GETH_CACHE=

# Restart policy: Set to no if you do not want services to automatically restart
RESTART=unless-stopped
# If you want debug logs, set this to debug instead of info
LOG_LEVEL=info

# JWT secret for CL:EL connection. This is created automatically by default.
# If specified manually here, this could be used to split CL and EL to different
# machines
JWT_SECRET=
# If you run a distributed setup, setting this to DISTRIBUTED=true
# will stop the nag screens during ./ethd update
DISTRIBUTED=
# Authenticated execution client endpoint. This default uses the execution node container.
EL_NODE=http://execution:8551
# Consensus client address. This could be comma-separated for Lighthouse, with failover,
# or could just be a remote consensus client URL for Teku, Lighthouse or Prysm "validator only" setups. Not in use for Nimbus.
CL_NODE=http://consensus:5052

# You can set specific version targets and choose binary or compiled from source builds below,
# via "Dockerfile.binary" or "Dockerfile.source"
# These settings are only migrated when running "./ethd update --keep-targets"

# SSV
SSV_NODE_TAG=latest

# MEV-Boost
MEV_DOCKER_TAG=latest
MEV_DOCKERFILE=Dockerfile.binary

# Nimbus
# SRC build target can be a tag, a branch, or a pr as "pr-ID"
NIM_SRC_BUILD_TARGET=unstable
NIM_DOCKER_TAG=multiarch-latest
NIM_DOCKERFILE=Dockerfile.source

# Teku
# SRC build target can be a tag or a branch
TEKU_SRC_BUILD_TARGET=master
TEKU_DOCKER_TAG=latest
TEKU_DOCKERFILE=Dockerfile.binary

# Lighthouse
# SRC build target can be a tag, a branch, or a pr as "pr-ID"
LH_SRC_BUILD_TARGET=builder-api
LH_DOCKER_TAG=latest-modern
LH_DOCKERFILE=Dockerfile.binary

# Prysm
# SRC build target can be a tag or a branch
PRYSM_SRC_BUILD_TARGET=develop
PRYSM_DOCKER_TAG=latest
PRYSM_DOCKERFILE=Dockerfile.binary

# Lodestar
# SRC build target can be a tag, a branch, or a pr as "pr-ID"
LS_SRC_BUILD_TARGET=unstable
LS_DOCKER_TAG=latest
LS_DOCKERFILE=Dockerfile.binary

# Besu
# SRC build target can be a tag, a branch, or a pr as "pr-ID"
BESU_SRC_BUILD_TARGET=main
BESU_DOCKER_TAG=latest
BESU_DOCKERFILE=Dockerfile.binary

# Erigon
# SRC build target can be a tag or a branch
ERIGON_SRC_BUILD_TARGET=devel
ERIGON_DOCKER_TAG=devel
ERIGON_DOCKERFILE=Dockerfile.binary

# Nethermind
# SRC build target can be a tag or a branch
NM_SRC_BUILD_TARGET=master
NM_DOCKER_TAG=latest
NM_DOCKERFILE=Dockerfile.binary

# Go-Ethereum aka Geth
# SRC build target can be a tag or a branch
GETH_SRC_BUILD_TARGET=master
GETH_DOCKER_TAG=latest
GETH_DOCKERFILE=Dockerfile.binary

#Akula
# SRC build target can be a tag or a branch
AKULA_SRC_BUILD_TARGET=master
AKULA_DOCKER_TAG=
AKULA_DOCKERFILE=Dockerfile.source

# staking-deposit-cli
# SRC build target can be a tag or a branch
DEPCLI_SRC_BUILD_TARGET=$(git describe --tags $(git rev-list --tags --max-count=1))
# Does not (yet?) exist on Docker hub
DEPCLI_DOCKER_TAG=nonesuch

# For the Node Dashboard, define a regex of mount points to ignore for the diskspace check.
NODE_EXPORTER_IGNORE_MOUNT_REGEX=^/(dev|proc|sys|run|var/lib/docker/.+)($|/)
